{"version":3,"sources":["img/clipart.png","components/NavBar.js","../../src/utils/Rand.js","../../src/particles/Canvas.jsx","../../src/utils/Color.js","../../src/particles/Ball.jsx","../../src/particles/Color.jsx","../../src/particles/Custom.jsx","../../src/particles/Lines.jsx","../../src/particles/Thick.jsx","../../src/particles/Square.jsx","../../src/particles/Cobweb.jsx","../../src/particles/Circle.jsx","../../src/particles/Tadpole.jsx","../../src/particles/Polygon.jsx","../../src/particles/Fountain.jsx","../../src/index.js","components/Home.js","components/ProjectCard.js","components/Projects.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavMenu","Nav","className","style","zIndex","activeKey","Item","color","to","Link","target","href","React","Component","Rand","probability","total","i","this","list","obj","val","Math","Canvas","width","height","canvas","canvasRef","props","onCanvasDidMount","setCanvasSize","setInterval","e","onResize","current","Object","assign","onMouseDown","handleMouseDown","bind","getStyle","getColor","c","hex","result","exec","parseInt","hexToRgb","r","Ball","context","emitter","Proton","num","customDeadBehaviour","emit","renderer","particle","miniEmitter","proton","bg","onCanvasInited","Color","key","defaultVal","config","Array","getProp","rps","mass","radius","life","body","position","v","tha","alpha","getArrProp","scale","cross","random","rotate","g","f","emitterV","pos","alphaB","scaleB","colorB","zone","crossZoneBehaviour","createRenderer","onUpdate","onParticleCreated","onParticleUpdate","globalCompositeOperation","Lines","mouseObj","attractionBehaviour","Thick","hue","index","Square","w","h","Cobweb","pointZone","particles","j","pA","pB","dis","Circle","Tadpole","mouseInfo","fillPointsData","drawTadpoleHead","drawTadpoleTail","l","x","y","linearEvaluation","A","COLOR","Polygon","drawPolygon","count","mainEmitter","once","gravity","pool","get","radiusInit","Fountain","length","gradient","ParticlesBg","type","String","getRandom","Home","maxWidth","minWidth","id","alt","src","clipart","Card","Title","Body","fontFamily","ProjectCard","project","name","description","archived","has_pages","homepage","Projects","state","projects","axios","then","response","console","log","data","setState","getProjects","map","UnityContent","App","hashType","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a03ce239.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clipart.ab41dc77.png\";","import React from \"react\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NavMenu extends React.Component\r\n{\r\n\r\n    render() {\r\n        return (\r\n            <Nav className=\"justify-content-center mt-3\" style={{zIndex: 1}} activeKey=\"/home\">\r\n                <Nav.Item>\r\n                    <Link style={{color: \"black\"}} className=\"nav-link\" to=\"\">Home</Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Link style={{color: \"black\"}} className=\"nav-link\" to=\"/projects\">Projects</Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                    <Nav.Link style={{color: \"black\"}} target=\"_blank\" href=\"https://www.linkedin.com/in/julian-estes-411b711a8/\">LinkedIn</Nav.Link>\r\n                </Nav.Item>\r\n            </Nav>\r\n        )\r\n    }\r\n}\r\nexport default NavMenu;","// Code source from here, thanks author\n// https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\nclass Rand {\n\n  constructor() {\n      this.list = [];\n  }\n\n  set(probability, target) {\n      this.list.push({\n          probability,\n          target,\n          a: 0,\n          b: 1\n      });\n\n      this.calculation();\n  }\n\n  calculation() {\n      let total = 0;\n      for (let i = 0; i < this.list.length; i++) {\n          total += this.list[i].probability;\n      }\n\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n          const val = obj.probability / total;\n\n          obj.a = i === 0 ? 0 : this.list[i - 1].b;\n          obj.b = obj.a + val;\n      }\n  }\n\n  getResult() {\n      const val = Math.random();\n      for (let i = 0; i < this.list.length; i++) {\n          const obj = this.list[i];\n\n          if (val <= obj.b && val > obj.a) {\n              return obj.target;\n          }\n      }\n\n      return this.list[0].target;\n  }\n};\n\nexport default Rand;\n","import React from \"react\";\nimport RAFManager from \"raf-manager\";\n\nexport default class Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this._id = 0;\n    this.size = { width: 0, height: 0 };\n    this.canvasRef = React.createRef();\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.initCanvas();\n      this.resize = this.resize.bind(this);\n      window.addEventListener(\"resize\", this.resize);\n    }, 100);\n\n    const canvas = this.canvasRef.current;\n    this.props.onCanvasDidMount && this.props.onCanvasDidMount(canvas);\n  }\n\n  initCanvas() {\n    const canvas = this.canvasRef.current;\n    if (this.props.globalCompositeOperation) {\n      const context = canvas.getContext(\"2d\");\n      context.globalCompositeOperation = this.props.globalCompositeOperation;\n    }\n\n    const { width, height } = this.setCanvasSize(canvas);\n    this.heartbeatDetectionCanvasSize(canvas);\n    this.props.onCanvasInited(canvas, width, height);\n  }\n\n  heartbeatDetectionCanvasSize(canvas) {\n    this._id = setInterval(() => {\n      if(this.canvasRef.current){\n        const newHeight = this.canvasRef.current.clientHeight;\n        if (newHeight !== this.size.height) {\n          const { width, height } = this.setCanvasSize(canvas);\n          this.props.onResize && this.props.onResize(width, height);\n        }\n      }\n    }, 1000 / 10);\n  }\n\n  componentWillUnmount() {\n    try{\n      window.removeEventListener(\"resize\", this.resize);\n      clearInterval(this._id);\n    }catch(e){\n      \n    }\n  }\n\n  resize() {\n    const canvas = this.canvasRef.current;\n    const { width, height } = this.setCanvasSize(canvas);\n    this.props.onResize && this.props.onResize(width, height);\n  }\n\n  setCanvasSize(canvas) {\n    const width = this.canvasRef.current.clientWidth;\n    const height = this.canvasRef.current.clientHeight;\n\n    this.size.width = width;\n    this.size.height = height;\n    canvas.width = width;\n    canvas.height = height;\n    return { width, height };\n  }\n\n  handleWaypointEnter() {\n    RAFManager.start();\n  }\n\n  handleWaypointLeave() {\n    RAFManager.stop();\n  }\n\n  getStyle() {\n    let style = { width: \"100%\", height: \"100%\" };\n\n    if (this.props.bg) {\n      style = Object.assign(style, {\n        position: \"absolute\",\n        zIndex: -1,\n        top: 0,\n        left: 0\n      });\n    }\n    return style;\n  }\n\n  handleMouseDown(e) {\n    this.props.onMouseDown && this.props.onMouseDown(e);\n  }\n  \n  render() {\n    return (\n      <canvas\n        ref={this.canvasRef}\n        onMouseDown={this.handleMouseDown.bind(this)}\n        style={this.getStyle()}\n      />\n    );\n  }\n}\n","\nfunction hexToRgb(hex) {\n    var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16)\n    } : {};\n}\n\nfunction getColor(color, a) {\n    let c;\n    if (color) {\n        c = hexToRgb(color);\n        return `rgba(${c.r},${c.g},${c.b}, ${a})`;\n    } else {\n        return null;\n    }\n}\n\n\nexport { hexToRgb, getColor };","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\nimport { getColor } from \"../utils/Color\";\n\nexport default class Ball extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    this.createMiniEmitter(canvas);\n    RAFManager.add(this.renderProton);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) { }\n  }\n\n  onResize() { }\n\n  createProton(canvas, width, height) {\n    const context = canvas.getContext(\"2d\");\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 9),\n      new Proton.Span(0.8, 1.3)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(1, 50));\n    emitter.addInitialize(new Proton.Life(5, 6));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(5, 8),\n        new Proton.Span(30, 70),\n        \"polar\"\n      )\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(1, 0));\n    emitter.addBehaviour(\n      new Proton.Color([\"#36aaf3\", \"#fd769c\", \"#94ff22\", \"#ffa545\", \"#ffffff\"])\n    );\n    emitter.addBehaviour(new Proton.Scale(0.7, 1));\n    emitter.addBehaviour(new Proton.Gravity(3));\n    emitter.addBehaviour(new Proton.Collision(emitter));\n    emitter.addBehaviour(this.customDeadBehaviour(canvas));\n    emitter.addBehaviour(\n      new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      )\n    );\n\n    emitter.p.x = Math.min(500, Math.max(canvas.width / 2 - 400, 50));\n    emitter.p.y = canvas.height / 2 + 50;\n    emitter.emit();\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    renderer.onProtonUpdate =  ()=> {\n      context.fillStyle = getColor(this.props.color, 0.2) || \"rgba(255, 255, 255, 0.2)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    };\n    this.proton.addRenderer(renderer);\n  }\n\n  customDeadBehaviour(canvas) {\n    return {\n      initialize: function (particle) { },\n      applyBehaviour: particle => {\n        if (particle.p.y + particle.radius >= canvas.height) {\n          if (particle.radius > 9) {\n            this.miniEmitteing(particle);\n            particle.dead = true;\n          }\n        }\n      }\n    };\n  }\n\n  createMiniEmitter(canvas) {\n    const miniEmitter = new Proton.Emitter();\n    miniEmitter.rate = new Proton.Rate(\n      new Proton.Span(3, 6),\n      new Proton.Span(1, 2)\n    );\n\n    miniEmitter.addInitialize(new Proton.Mass(1));\n    miniEmitter.radiusInitialize = new Proton.Radius();\n    miniEmitter.addInitialize(miniEmitter.radiusInitialize);\n    miniEmitter.addInitialize(new Proton.Life(0.5, 1));\n    miniEmitter.addInitialize(\n      new Proton.V(\n        new Proton.Span(1.5, 3),\n        new Proton.Span(0, 70, true),\n        \"polar\"\n      )\n    );\n\n    miniEmitter.colorBehaviour = new Proton.Color(\"#ffffff\");\n    miniEmitter.addBehaviour(new Proton.Alpha(1, 0));\n    miniEmitter.addBehaviour(miniEmitter.colorBehaviour);\n    miniEmitter.addBehaviour(new Proton.Gravity(4));\n    miniEmitter.addBehaviour(new Proton.Collision(miniEmitter));\n    miniEmitter.addBehaviour(\n      new Proton.CrossZone(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height),\n        \"bound\"\n      )\n    );\n    this.proton.addEmitter(miniEmitter);\n\n    this.miniEmitter = miniEmitter;\n  }\n\n  miniEmitteing(particle) {\n    const miniEmitter = this.miniEmitter;\n    miniEmitter.radiusInitialize.reset(\n      particle.radius * 0.05,\n      particle.radius * 0.2\n    );\n    miniEmitter.colorBehaviour.reset(particle.color);\n    miniEmitter.p.x = particle.p.x;\n    miniEmitter.p.y = particle.p.y;\n    miniEmitter.emit(\"once\");\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Color extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#529B88\",\n      \"#CDD180\",\n      \"#FFFA32\",\n      \"#FB6255\",\n      \"#FB4A53\",\n      \"#FF4E50\",\n      \"#F9D423\"\n    ];\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize() {}\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(5, 8),\n      new Proton.Span(0.1, 0.25)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(20, 200));\n    emitter.addInitialize(new Proton.Life(2, 4));\n    emitter.addInitialize(\n      new Proton.Position(new Proton.RectZone(0, 0, width, height))\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(0, 1, Infinity, Proton.easeOutCubic));\n    emitter.addBehaviour(new Proton.Scale(1, 0, Infinity, Proton.easeOutCubic));\n    emitter.addBehaviour(new Proton.Color(this.colors, \"random\"));\n\n    emitter.emit();\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    this.proton.addRenderer(renderer);\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Color extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.colors = [\n            \"#529B88\",\n            \"#CDD180\",\n            \"#FFFA32\",\n            \"#FB6255\",\n            \"#FB4A53\",\n            \"#FF4E50\",\n            \"#F9D423\"\n        ];\n        this.renderProton = this.renderProton.bind(this);\n    }\n\n    componentWillUnmount() {\n        try {\n            RAFManager.remove(this.renderProton);\n            this.proton.destroy();\n        } catch (e) { }\n    }\n\n    onCanvasInited(canvas, width, height) {\n        this.createProton(canvas, width, height);\n        RAFManager.add(this.renderProton);\n    }\n\n    onResize(width, height) {\n        this.crossZoneBehaviour.zone.width = width;\n        this.crossZoneBehaviour.zone.height = height;\n        this.proton.renderers[0].resize(width, height);;\n    }\n\n    getProp(key, defaultVal) {\n        const config = this.props.config || {};\n        const val = config[key] || defaultVal;\n        if (Array.isArray(val)) {\n            return new Proton.Span(val[0], val[1]);\n        } else {\n            return val;\n        }\n    }\n\n    getArrProp(key, defaultVal) {\n        const config = this.props.config || {};\n        const val = config[key] || defaultVal;\n        if (!val) return null;\n\n        if (Array.isArray(val)) {\n            return val;\n        } else {\n            return [val, val];\n        }\n    }\n\n    createProton(canvas, width, height) {\n        const num = this.getProp(\"num\", [5, 8]);\n        const rps = this.getProp(\"rps\", [0.1, 0.2]);\n        const mass = this.getProp(\"mass\", 1);\n        const radius = this.getProp(\"radius\", [10, 30]);\n        const life = this.getProp(\"life\", [2, 3]);\n        const body = this.getProp(\"body\");\n        const position = this.getProp(\"position\");\n        const v = this.getProp(\"v\", [2, 3]);\n        const tha = this.getProp(\"tha\", [-15, 15]);\n        const alpha = this.getArrProp(\"alpha\");\n        const scale = this.getArrProp(\"scale\");\n        const color = this.getArrProp(\"color\");\n        const cross = this.getProp(\"cross\", \"dead\");\n        const random = this.getProp(\"random\");\n        const rotate = this.getArrProp(\"rotate\");\n        const g = this.getProp(\"g\");\n        const f = this.getArrProp(\"f\");\n        const emitterV = this.getProp(\"emitter\");\n\n        this.proton = new Proton();\n        let emitter;\n        if (emitterV === \"follow\") {\n            emitter = new Proton.FollowEmitter();\n        } else {\n            emitter = new Proton.Emitter();\n        }\n        emitter.rate = new Proton.Rate(num, rps);\n\n        emitter.addInitialize(new Proton.Mass(mass));\n        emitter.addInitialize(new Proton.Radius(radius));\n        emitter.addInitialize(new Proton.Life(life));\n        emitter.addInitialize(new Proton.Velocity(v, tha, \"polar\"));\n        if (body) emitter.addInitialize(new Proton.Body(body));\n\n        let pos;\n        if (position === \"all\" || position === \"screen\") {\n            pos = new Proton.Position(new Proton.RectZone(0, 0, canvas.width, canvas.height))\n        } else if (typeof position === \"object\") {\n            pos = new Proton.Position(new Proton.RectZone(position.x, position.y, position.width, position.height))\n        } else {\n            emitter.p.x = canvas.width / 2;\n            emitter.p.y = canvas.height / 2;\n        }\n\n        emitter.addInitialize(pos);\n\n        /// behaviour\n        const alphaB = alpha ? new Proton.Alpha(alpha[0], alpha[1]) : new Proton.Alpha(0, 1);\n        const scaleB = scale ? new Proton.Scale(scale[0], scale[1]) : new Proton.Scale(1, 0.2);\n        const colorB = color ? new Proton.Color(color[0], color[1]) : new Proton.Color(this.colors);\n\n        emitter.addBehaviour(alphaB);\n        emitter.addBehaviour(scaleB);\n        if(!body) emitter.addBehaviour(colorB);\n\n        if(rotate){\n            if(rotate[0]===true||rotate[0]===\"rotate\"){\n                emitter.addBehaviour(new Proton.Rotate());\n            }else{\n                emitter.addBehaviour(new Proton.Rotate(rotate[0], rotate[1]));\n            }\n        }\n\n        const zone = new Proton.RectZone(0, 0, canvas.width, canvas.height)\n        const crossZoneBehaviour = new Proton.CrossZone(zone, cross);\n        emitter.addBehaviour(crossZoneBehaviour);\n\n        random && emitter.addBehaviour(new Proton.RandomDrift(random, random, 0.05));\n        g && emitter.addBehaviour(new Proton.G(g));\n        f && emitter.addBehaviour(new Proton.F(f[0], f[1]));\n\n        emitter.emit();\n        this.proton.addEmitter(emitter);\n\n        const renderer = this.createRenderer(canvas);\n        this.proton.addRenderer(renderer);\n\n        this.emitter = emitter;\n        this.crossZoneBehaviour = crossZoneBehaviour;\n    }\n\n    createRenderer(canvas) {\n        const width = canvas.width;\n        const height = canvas.height;\n        const context = canvas.getContext(\"2d\");\n        const renderer = new Proton.CanvasRenderer(canvas);\n\n        const onUpdate = this.getProp(\"onUpdate\");\n        if (onUpdate) {\n            renderer.onProtonUpdate = () => {\n                onUpdate(context, width, height);\n            };\n        }\n\n        const onParticleCreated = this.getProp(\"onParticleCreated\");\n        if (onParticleCreated) {\n            renderer.onParticleCreated = (particle) => {\n                onParticleCreated(context, particle);\n            };\n        }\n\n        const onParticleUpdate = this.getProp(\"onParticleUpdate\");\n        if (onParticleUpdate) {\n            renderer.onParticleUpdate = (particle) => {\n                onParticleUpdate(context, particle);\n            };\n        }\n\n        return renderer;\n    }\n\n    renderProton() {\n        this.proton && this.proton.update();\n    }\n\n    handleMouseDown(e) {\n        const onMouseDown = this.getProp(\"onMouseDown\");\n        if (onMouseDown) {\n            onMouseDown(e);\n        }\n    }\n\n    render() {\n        const globalCompositeOperation = this.props.globalCompositeOperation || this.props.operation || \"source-over\";\n\n        return (\n            <Canvas\n                bg={this.props.bg}\n                onMouseDown={this.handleMouseDown.bind(this)}\n                globalCompositeOperation={globalCompositeOperation}\n                onCanvasInited={this.onCanvasInited.bind(this)}\n                onResize={this.onResize.bind(this)}\n            />\n        );\n    }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\nimport { getColor } from \"../utils/Color\";\n\nexport default class Lines extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasDidMount(canvas){\n    if(this.props.color){\n      canvas.style.backgroundColor = this.props.color;\n    }\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) { }\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.damping = 0.008;\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 250);\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(4));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(1.5),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    const mouseObj = {\n      x: width / 2,\n      y: height / 2\n    };\n\n    const attractionBehaviour = new Proton.Attraction(mouseObj, 0, 0);\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"cross\"\n    );\n    emitter.addBehaviour(new Proton.Color(\"random\"));\n    emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.RandomDrift(10, 10, 0.05));\n    emitter.p.x = canvas.width / 2;\n    emitter.p.y = canvas.height / 2;\n    emitter.emit(\"once\");\n\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas));\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n    renderer.onProtonUpdate = () => {\n      context.fillStyle = getColor(this.props.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleUpdate = function (particle) {\n      context.beginPath();\n      context.strokeStyle = particle.color;\n      context.lineWidth = 1;\n      context.moveTo(particle.old.p.x, particle.old.p.y);\n      context.lineTo(particle.p.x, particle.p.y);\n      context.closePath();\n      context.stroke();\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\nimport { getColor } from \"../utils/Color\";\n\nexport default class Thick extends React.Component {\n  constructor(props) {\n    super(props);\n    this.hue = 0;\n    this.index = 0;\n    this.colorTemplate = `hsla(hue,80%,50%, 0.75)`;\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasDidMount(canvas){\n    if(this.props.color){\n      canvas.style.backgroundColor = this.props.color;\n    }\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.canvas = canvas;\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.damping = 0.008;\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 150);\n\n    // Initialize\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(8));\n    emitter.addInitialize(\n      new Proton.V(new Proton.Span(0.1, 0.5), new Proton.Span(0, 360), \"polar\")\n    );\n    emitter.addInitialize(\n      new Proton.Position(\n        new Proton.CircleZone(canvas.width / 2, canvas.height / 2, 100)\n      )\n    );\n\n    // Behaviour\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"cross\"\n    );\n    emitter.addBehaviour(crossZoneBehaviour);\n    this.repulsion = new Proton.Repulsion(\n      {\n        x: canvas.width / 2,\n        y: canvas.height / 2 - 100\n      },\n      3,\n      300\n    );\n\n    this.attraction = new Proton.Attraction(\n      {\n        x: canvas.width / 2,\n        y: canvas.height / 2\n      },\n      3,\n      200\n    );\n    emitter.addBehaviour(this.attraction, this.repulsion);\n    emitter.addBehaviour(new Proton.Color(\"random\"));\n    emitter.addBehaviour(new Proton.RandomDrift(20, 15, 0.15));\n\n    emitter.emit(\"once\");\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas));\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n\n    renderer.onProtonUpdate = () => {\n      this.hue += 1;\n      context.fillStyle = getColor(this.props.color, 0.02) || \"rgba(0, 0, 0, 0.02)\";\n      context.fillRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      particle.data.begin = Proton.MathUtil.randomAToB(1, 120);\n      particle.data.tha = Proton.MathUtil.randomAToB(0, Math.PI * 2);\n    };\n\n    renderer.onParticleUpdate = particle => {\n      const hue = particle.data.begin + this.hue;\n      particle.color = this.colorTemplate.replace(\"hue\", hue % 360);\n\n      const ratio = 3 / 4;\n      const radius =\n        particle.radius * (1 - ratio) * Math.cos((particle.data.tha += 0.01)) +\n        particle.radius * ratio;\n\n      context.beginPath();\n      context.fillStyle = particle.color;\n      context.arc(particle.p.x, particle.p.y, radius, 0, Math.PI * 2, true);\n      context.closePath();\n      context.fill();\n    };\n\n    return renderer;\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  renderProton() {\n    const canvas = this.canvas;\n    this.proton.update();\n    if (this.index % 200 === 0) {\n      this.attraction.targetPosition.x = Math.random() * canvas.width;\n      this.attraction.targetPosition.y = Math.random() * canvas.height;\n\n      this.repulsion.targetPosition.x = Math.random() * canvas.width;\n      this.repulsion.targetPosition.y = Math.random() * canvas.height;\n    }\n\n    this.index++;\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Square extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#fad390\",\n      \"#81ecec\",\n      \"#ffffff\",\n      \"#badc58\",\n      \"#f9ca24\",\n      \"#FEA47F\"\n    ];\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasDidMount(canvas) {\n    \n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    const dis = 150;\n    this.crossZoneBehaviour.zone.width = width + 2 * dis;\n    this.crossZoneBehaviour.zone.height = height + 2 * dis;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 50);\n    emitter.damping = 0;\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(4, 70));\n    emitter.addInitialize(\n      new Proton.Velocity(new Proton.Span(2, 10), new Proton.Span(0), \"polar\")\n    );\n    emitter.addInitialize(\n      new Proton.Position(\n        new Proton.LineZone(0, canvas.height, canvas.width, canvas.height)\n      )\n    );\n\n    const dis = 150;\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(\n        0 - dis,\n        0 - dis,\n        canvas.width + 2 * dis,\n        canvas.height + 2 * dis\n      ),\n      \"cross\"\n    );\n    emitter.addBehaviour(crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.1, 0.55)));\n    emitter.addBehaviour(new Proton.Color(this.colors));\n\n    emitter.emit(\"once\");\n    this.proton.addEmitter(emitter);\n    const renderer = this.createRenderer(canvas);\n    this.proton.addRenderer(renderer);\n\n    this.crossZoneBehaviour = crossZoneBehaviour;\n    emitter.preEmit(2);\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CustomRenderer();\n\n    renderer.onProtonUpdate = () => {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      const w = particle.radius || 60;\n      const h = Proton.MathUtil.randomAToB(100, 200, \"int\");\n      particle.data.w = w;\n      particle.data.h = h;\n    };\n\n    renderer.onParticleUpdate = particle => {\n      const w = particle.data.w;\n      const h = particle.data.h;\n      context.save();\n      context.globalAlpha = particle.alpha;\n      context.fillStyle = particle.color;\n\n      context.translate(particle.p.x, particle.p.y);\n      context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n      context.translate(-particle.p.x, -particle.p.y);\n\n      context.beginPath();\n      context.rect(particle.p.x - w / 2, particle.p.y - h / 2, w, h);\n\n      context.closePath();\n      context.fill();\n      context.globalAlpha = 1;\n      context.restore();\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"lighter\"\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\nimport { getColor } from \"../utils/Color\";\n\nexport default class Cobweb extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(100),\n      new Proton.Span(0.05, 0.2)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(1, 4));\n    emitter.addInitialize(new Proton.Life(Infinity));\n\n    const pointZone = new Proton.Position(\n      new Proton.RectZone(0, 0, width, height)\n    );\n    emitter.addInitialize(pointZone);\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(0.3, 0.6),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.2, 0.9)));\n    emitter.addBehaviour(new Proton.Color(this.props.color || \"#333\"));\n    this.crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, width, height),\n      \"cross\"\n    );\n    emitter.addBehaviour(this.crossZoneBehaviour);\n\n    emitter.emit(\"once\");\n    emitter.damping = 0;\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas, emitter));\n  }\n\n  createRenderer(canvas, emitter) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n    const R = 140;\n\n    renderer.onProtonUpdateAfter = ()=> {\n      let particles = emitter.particles;\n\n      for (let i = 0; i < particles.length; i++) {\n        for (let j = i + 1; j < particles.length; j++) {\n          let pA = particles[i];\n          let pB = particles[j];\n          let dis = pA.p.distanceTo(pB.p);\n\n          if (dis < R) {\n            let alpha = (1 - dis / R) * 0.5;\n            context.strokeStyle = getColor(this.props.color, alpha) || `rgba(3, 3, 3, ${alpha})`;\n            context.beginPath();\n            context.moveTo(pA.p.x, pA.p.y);\n            context.lineTo(pB.p.x, pB.p.y);\n            context.closePath();\n            context.stroke();\n          }\n        }\n      }\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Circle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#74b9ff\",\n      \"#e84393\",\n      \"#6c5ce7\",\n      \"#00b894\",\n      \"#fdcb6e\",\n      \"#006266\",\n      \"#1B1464\"\n    ];\n\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) { }\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(this.props.num || 20);\n    emitter.damping = 0.008;\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(30, 600));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(0.5),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    emitter.addInitialize(\n      new Proton.Position(\n        new Proton.RectZone(0, 0, canvas.width, canvas.height)\n      )\n    );\n\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"cross\"\n    );\n    emitter.addBehaviour(crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.Alpha(Proton.getSpan(0.35, 0.55)));\n    emitter.addBehaviour(new Proton.Color(this.getColor()));\n    emitter.addBehaviour(new Proton.RandomDrift(50, 50, 0.5));\n\n    emitter.emit(\"once\");\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    this.proton.addRenderer(renderer);\n\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  getColor() {\n    let c = this.colors;\n    if (this.props.color) {\n      if(Array.isArray(this.props.color)){\n        c = this.props.color;\n      }else{\n        c = [this.props.color];\n      }\n    }\n\n    return c;\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darken\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Tadpole extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasDidMount(canvas) {\n\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    this.renderProton();\n  }\n\n  onResize(width, height) {\n    this.crossZoneBehaviour.zone.width = width;\n    this.crossZoneBehaviour.zone.height = height;\n    this.proton.renderers[0].resize(width, height);\n  }\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n\n    const emitter = new Proton.Emitter();\n    emitter.damping = 0.008;\n    emitter.rate = new Proton.Rate(this.props.num ? this.props.num : 50);\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(5, 9));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(1.5),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    emitter.addInitialize(\n      new Proton.Position(new Proton.RectZone(0, 0, width, height))\n    );\n\n    const mouseInfo = {\n      x: width / 2,\n      y: height / 2\n    };\n\n    const attractionBehaviour = new Proton.Attraction(mouseInfo, 0, 0);\n    const crossZoneBehaviour = new Proton.CrossZone(\n      new Proton.RectZone(0, 0, canvas.width, canvas.height),\n      \"bound\"\n    );\n    emitter.addBehaviour(new Proton.Color(this.props.color || \"#bbb\"));\n    //emitter.addBehaviour(new Proton.Alpha(new Proton.Span(0.5, 1)));\n    emitter.addBehaviour(attractionBehaviour, crossZoneBehaviour);\n    emitter.addBehaviour(new Proton.RandomDrift(15, 15, 0.05));\n    emitter.emit(\"once\");\n\n    this.proton.addEmitter(emitter);\n    this.proton.addRenderer(this.createRenderer(canvas));\n    this.crossZoneBehaviour = crossZoneBehaviour;\n  }\n\n  createRenderer(canvas) {\n    const jointCount = 10;\n    const delayTime = 8;\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CanvasRenderer(canvas);\n\n    renderer.onProtonUpdate = function () {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      particle.data.points = [];\n      particle.data.index = 0;\n    };\n\n    renderer.onParticleUpdate = function (particle) {\n      drawTadpoleTail(particle);\n      if (particle.data.index % delayTime === 0) fillPointsData(particle);\n      drawTadpoleHead(particle);\n      particle.data.index++;\n    };\n\n    const fillPointsData = particle => {\n      particle.data.points.unshift(particle.p.y);\n      particle.data.points.unshift(particle.p.x);\n\n      if (particle.data.points.length > jointCount) {\n        particle.data.points.pop();\n        particle.data.points.pop();\n      }\n    };\n\n    const drawTadpoleHead = particle => {\n      context.fillStyle = particle.color;\n      context.beginPath();\n      context.arc(\n        particle.p.x,\n        particle.p.y,\n        particle.radius,\n        0,\n        Math.PI * 2,\n        true\n      );\n      context.closePath();\n      context.fill();\n    };\n\n    const drawTadpoleTail = particle => {\n      context.beginPath();\n      context.strokeStyle = particle.color;\n\n      context.moveTo(particle.p.x, particle.p.y);\n\n      const l = particle.data.points.length;\n      for (let i = 0; i < l; i += 2) {\n        const x = particle.data.points[i];\n        const y = particle.data.points[i + 1];\n\n        context.lineWidth = linearEvaluation(i, l);\n        context.lineTo(x, y);\n        context.stroke();\n      }\n    };\n\n    const linearEvaluation = (i, l) => {\n      if (l <= 2) return 1;\n\n      const max = 6;\n      const A = (max - 1) / (2 / l - 1);\n      const B = 1 - A;\n      const X = (i + 2) / l;\n      let val = A * X + B;\n      val = val >> 0;\n\n      return val;\n    };\n\n    return renderer;\n  }\n\n  renderProton() {\n    RAFManager.add(() => {\n      this.proton.update();\n      //this.proton.stats.update();\n    });\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasDidMount={this.onCanvasDidMount.bind(this)}\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nconst COLOR = [\n  \"#f6b93b\",\n  \"#18dcff\",\n  \"#cd84f1\",\n  \"#ED4C67\",\n  \"#ffffff\",\n  \"#b71540\",\n  \"#32ff7e\",\n  \"#ff3838\"\n];\n\nexport default class Polygon extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas);\n    this.createEmitter({\n      canvas,\n      x: width / 2,\n      y: height / 2,\n      mainEmitter: true,\n      zone: \"bound\"\n    });\n\n    RAFManager.add(this.renderProton);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onResize() {}\n\n  createProton(canvas) {\n    this.proton = new Proton();\n    const renderer = this.createRenderer(canvas);\n    this.proton.addRenderer(renderer);\n  }\n\n  createRenderer(canvas) {\n    const context = canvas.getContext(\"2d\");\n    const renderer = new Proton.CustomRenderer();\n\n    renderer.onProtonUpdate = () => {\n      context.clearRect(0, 0, canvas.width, canvas.height);\n    };\n\n    renderer.onParticleCreated = particle => {\n      particle.data.count = Proton.MathUtil.randomAToB(3, 10, true);\n    };\n\n    renderer.onParticleUpdate = particle => {\n      context.save();\n      context.globalAlpha = particle.alpha;\n      context.fillStyle = particle.color;\n\n      context.translate(particle.p.x, particle.p.y);\n      context.rotate(Proton.MathUtil.degreeTransform(particle.rotation));\n      context.translate(-particle.p.x, -particle.p.y);\n\n      context.beginPath();\n      drawPolygon(particle, particle.data.count);\n\n      context.closePath();\n      context.fill();\n      context.globalAlpha = 1;\n      context.restore();\n    };\n\n    renderer.onParticleDead = particle => {};\n\n    const drawPolygon = (particle, count) => {\n      if (count >= 7) {\n        context.arc(\n          particle.p.x,\n          particle.p.y,\n          particle.radius,\n          0,\n          Math.PI * 2,\n          true\n        );\n      } else {\n        const radius = particle.radius;\n\n        for (let i = 0; i <= count; i++) {\n          let x =\n            particle.p.x +\n            radius * Math.cos((((Math.PI / 180) * 360) / count) * i);\n          let y =\n            particle.p.y +\n            radius * Math.sin((((Math.PI / 180) * 360) / count) * i);\n\n          if (i === 0) context.moveTo(x, y);\n          else context.lineTo(x, y);\n        }\n      }\n    };\n\n    return renderer;\n  }\n\n  createEmitter({\n    mainEmitter,\n    canvas,\n    x,\n    y,\n    radius,\n    color = COLOR,\n    zone = \"dead\",\n    once = \"all\",\n    alpha = 0.85,\n    gravity = 3.5\n  }) {\n    const emitter = this.proton.pool.get(Proton.Emitter);\n\n    if (!emitter.completed) {\n      emitter.rate = new Proton.Rate(\n        this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 9),\n        new Proton.Span(1.6, 2.2)\n      );\n\n      const radiusInit = mainEmitter\n        ? new Proton.Radius(10, 110)\n        : new Proton.Radius(3, radius);\n      emitter.addInitialize(new Proton.Mass(1));\n      emitter.addInitialize(radiusInit);\n      emitter.addInitialize(new Proton.Life(3, 6));\n      emitter.addInitialize(\n        new Proton.Velocity(\n          new Proton.Span(4, 6),\n          new Proton.Span(-90, 90),\n          \"polar\"\n        )\n      );\n\n      emitter.addBehaviour(new Proton.Alpha(alpha, 0.2));\n      emitter.addBehaviour(new Proton.Color(color));\n      emitter.addBehaviour(new Proton.Scale(1, 0.3));\n      emitter.addBehaviour(new Proton.Rotate());\n      emitter.addBehaviour(new Proton.Gravity(gravity));\n\n      emitter.addBehaviour(this.customDeadBehaviour(canvas));\n      emitter.addBehaviour(\n        new Proton.CrossZone(\n          new Proton.RectZone(0, 0, canvas.width, canvas.height),\n          zone\n        )\n      );\n    }\n\n    emitter.p.x = x;\n    emitter.p.y = y;\n    if (once === \"once\") emitter.emit(\"once\");\n    else emitter.emit();\n\n    this.proton.addEmitter(emitter);\n    //this.expireEmitter(emitter);\n  }\n\n  expireEmitter(emitter) {\n    setTimeout(() => {\n      emitter.completed = true;\n      this.proton.pool.expire(emitter);\n      this.proton.removeEmitter(emitter);\n    }, 500);\n  }\n\n  customDeadBehaviour(canvas) {\n    return {\n      initialize: particle => {\n        particle.data = particle.data || {};\n        particle.data.oldRadius = particle.radius;\n        particle.data.emitterCount = 0;\n      },\n      applyBehaviour: particle => {\n        if (particle.radius < 5) return;\n        if (particle.data.emitterCount >= 2) return;\n\n        if (particle.radius <= (1 / 3) * particle.data.oldRadius) {\n          particle.data.emitterCount++;\n          this.createEmitter({\n            canvas,\n            x: particle.p.x,\n            y: particle.p.y,\n            radius: particle.radius * (1 / 2),\n            alpha: 0.5,\n            gravity: 5,\n            color: particle.color,\n            once: \"once\"\n          });\n        }\n      }\n    };\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"darker\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React from \"react\";\nimport Proton from \"proton-engine\";\nimport RAFManager from \"raf-manager\";\nimport Canvas from \"./Canvas.jsx\";\n\nexport default class Fountain extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.colors = [\n      \"#529B88\",\n      \"#CDD180\",\n      \"#FFFA32\",\n      \"#FB6255\",\n      \"#FB4A53\",\n      \"#FF4E50\",\n      \"#F9D423\"\n    ];\n    this.renderProton = this.renderProton.bind(this);\n  }\n\n  componentWillUnmount() {\n    try {\n      RAFManager.remove(this.renderProton);\n      this.proton.destroy();\n    } catch (e) {}\n  }\n\n  onCanvasInited(canvas, width, height) {\n    this.createProton(canvas, width, height);\n    RAFManager.add(this.renderProton);\n  }\n\n  onResize() {}\n\n  createProton(canvas, width, height) {\n    this.proton = new Proton();\n    const emitter = new Proton.Emitter();\n    emitter.rate = new Proton.Rate(\n      this.props.num ? new Proton.Span(this.props.num) : new Proton.Span(4, 8),\n      new Proton.Span(0.1, 0.25)\n    );\n\n    emitter.addInitialize(new Proton.Mass(1));\n    emitter.addInitialize(new Proton.Radius(20, 200));\n    emitter.addInitialize(new Proton.Life(2, 4));\n    emitter.addInitialize(\n      new Proton.Velocity(\n        new Proton.Span(4, 7),\n        new Proton.Span(0, 360),\n        \"polar\"\n      )\n    );\n    emitter.addInitialize(\n      new Proton.Position(new Proton.CircleZone(width / 2, height / 2, 100))\n    );\n\n    emitter.addBehaviour(new Proton.Alpha(1, 0));\n    emitter.addBehaviour(new Proton.Scale(0.2, 1));\n    emitter.addBehaviour(this.createCustomBehaviour());\n    emitter.addBehaviour(new Proton.Color(this.colors, \"random\"));\n    emitter.emit();\n    this.proton.addEmitter(emitter);\n\n    const renderer = new Proton.CanvasRenderer(canvas);\n    this.proton.addRenderer(renderer);\n  }\n\n  createCustomBehaviour() {\n    const f = 10 * 100;\n    return {\n      initialize: function(particle) {\n        particle.f = new Proton.Vector2D(0, 0);\n      },\n      applyBehaviour: particle => {\n        let length = particle.v.length() / 1000;\n        let gradient = particle.v.getGradient();\n        gradient += 3.14 / 2;\n\n        particle.f.x = f * length * Math.cos(gradient);\n        particle.f.y = f * length * Math.sin(gradient);\n        particle.a.add(particle.f);\n      }\n    };\n  }\n\n  renderProton() {\n    this.proton && this.proton.update();\n  }\n\n  render() {\n    return (\n      <Canvas bg={this.props.bg}\n        globalCompositeOperation=\"xor\"\n        onCanvasInited={this.onCanvasInited.bind(this)}\n        onResize={this.onResize.bind(this)}\n      />\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport Rand from \"./utils/Rand.js\";\nimport Ball from \"./particles/Ball.jsx\";\nimport Color from \"./particles/Color.jsx\";\nimport Custom from \"./particles/Custom.jsx\";\nimport Lines from \"./particles/Lines.jsx\";\nimport Thick from \"./particles/Thick.jsx\";\nimport Square from \"./particles/Square.jsx\";\nimport Cobweb from \"./particles/Cobweb.jsx\";\nimport Circle from \"./particles/Circle.jsx\";\nimport Tadpole from \"./particles/Tadpole.jsx\";\nimport Polygon from \"./particles/Polygon.jsx\";\nimport Fountain from \"./particles/Fountain.jsx\";\n\nexport default class ParticlesBg extends Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  getRandom() {\n    const { num, bg, color } = this.props;\n\n    // Code source from here, thanks author\n    // https://github.com/drawcall/Proton/blob/gh-pages/source/src/utils/Rand.js\n    if (!this.random) {\n      this.random = new Rand();\n      this.random.set(0.25, <Color num={num} bg={bg} color={color} />);\n      this.random.set(0.2, <Ball num={num} bg={bg} color={color} />);\n      this.random.set(0.2, <Lines num={num} bg={bg} color={color} />);\n      this.random.set(0.16, <Thick num={num} bg={bg} color={color} />);\n      this.random.set(0.18, <Circle num={num} bg={bg} color={color} />);\n      this.random.set(0.04, <Cobweb num={num} bg={bg} color={color} />);\n      this.random.set(0.1, <Polygon num={num} bg={bg} color={color} />);\n      this.random.set(0.08, <Square num={num} bg={bg} color={color} />);\n      this.random.set(0.18, <Tadpole num={num} bg={bg} color={color} />);\n      this.random.set(0.15, <Fountain num={num} bg={bg} color={color} />);\n    }\n    return this.random.getResult();\n  }\n\n  getBgParticles() {\n    const { type, num, bg, color, config } = this.props;\n\n    let particles;\n    switch (String(type).toLowerCase()) {\n      case \"color\":\n        particles = <Color num={num} bg={bg} color={color} />;\n        break;\n      case \"ball\":\n        particles = <Ball num={num} bg={bg} color={color} />;\n        break;\n      case \"lines\":\n        particles = <Lines num={num} bg={bg} color={color} />;\n        break;\n      case \"thick\":\n        particles = <Thick num={num} bg={bg} color={color} />;\n        break;\n      case \"circle\":\n        particles = <Circle num={num} bg={bg} color={color} />;\n        break;\n      case \"cobweb\":\n        particles = <Cobweb num={num} bg={bg} color={color} />;\n        break;\n      case \"polygon\":\n        particles = <Polygon num={num} bg={bg} color={color} />;\n        break;\n      case \"square\":\n        particles = <Square num={num} bg={bg} color={color} />;\n        break;\n      case \"tadpole\":\n        particles = <Tadpole num={num} bg={bg} color={color} />;\n        break;\n      case \"fountain\":\n        particles = <Fountain num={num} bg={bg} color={color} />;\n        break;\n      case \"custom\":\n        particles = <Custom bg={bg} config={config} />;\n        break;\n      case \"random\":\n        particles = this.getRandom(num);\n        break;\n\n      default:\n        particles = <Color num={num} bg={bg} color={color} />;\n        break;\n    }\n\n    return particles;\n  }\n\n  render() {\n    const particles = this.getBgParticles();\n    return <React.Fragment>{particles}</React.Fragment>;\n  }\n}\n","import React from \"react\";\r\nimport MediaQuery from \"react-responsive/src/Component\";\r\nimport ParticlesBg from \"./particles-bg\";\r\nimport clipart from \"../img/clipart.png\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\n\r\n\r\nclass Home extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"App\">\r\n                <MediaQuery maxWidth={576}>\r\n                    <ParticlesBg num=\"20\" color=\"#b51204\" className=\"sandwich\" type=\"cobweb\" bg={true}/>\r\n                </MediaQuery>\r\n                <MediaQuery minWidth={576}>\r\n                    <ParticlesBg color=\"#b51204\" type=\"cobweb\" bg={true}/>\r\n                </MediaQuery>\r\n\r\n                <h2 id=\"title\" className=\"text-center\" >\r\n                    Julian Estes\r\n                </h2>\r\n                <h5 className=\"text-center\">\r\n                    <u style={{color: \"#3267a8\"}}>FullStack Software Developer</u>\r\n                </h5>\r\n                <div>\r\n                    <div className=\"titleBackground mx-auto col-md-6\">\r\n                        <img className=\"d-block mx-auto titleClipart\" alt=\"Meaningless clipart. fun though.\" height=\"300px\" width=\"300px\" src={clipart}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"mx-auto col-md-6 mt-4\">\r\n                    <Card>\r\n                        <Card.Title style={{color: \"#4d8a8c\"}} className=\"text-center mt-2\">\r\n                            Greetings!\r\n                        </Card.Title>\r\n                        <Card.Body style={{fontFamily: \"Lato\"}}>\r\n                            Hi! Thanks for taking the time to check out my site! Youll find links for my Linkedin and some\r\n                            of my sample projects(Some are a little outdated!) at the top of the page!\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card className=\" mt-2 mb-3\">\r\n                        <Card.Title style={{color: \"#4d8a8c\"}}  className=\"text-center mt-2\">\r\n                            About Me\r\n                        </Card.Title>\r\n                        <Card.Body style={{fontFamily: \"Lato\"}}>\r\n                            So I guess first off, My name is <span style={{color:\"#802f1d\"}}>Julian Estes</span> however i go by <span style={{color:\"#327ba8\"}}>Kyle Estes!</span>\r\n                            I've loved software and game development since i was a kid. I've always been excited in how you can\r\n                            put a few snippits of code together and watch something come to life! Its been my dream since I was\r\n                            a kid to get in the development field! To that end I've been practicing c# for years! More recently\r\n                            i've been learning javascript for some web development(front and backend) experience. I've learned\r\n                            several frameworks (Vue, React, & Angular). I'm also certified by Careerfoundry in the M.E.R.N\r\n                            (or M.E.A.N... or... M.E.V.N... but that doesnt sound as cool) tech stack. I absolutely love\r\n                            what I do and I bring that passion and love to any project I work on.\r\n                            <br/>\r\n                            <br/>I know theres still a ton to learn. I learn new things every day and I'm up for any challenge that anyone can present to me!\r\n                            <br/>\r\n                            <br/>Specialities: Javascript & JS frameworks Vue, React, Angular, C#; Object-Oriented programming\r\n                        </Card.Body>\r\n                    </Card>\r\n                    <Card className=\"mt-2 mb-5\">\r\n                        <Card.Title style={{color: \"#4d8a8c\"}}  className=\"text-center mt-2\">\r\n                            Inquiries\r\n                        </Card.Title>\r\n                        <Card.Body>\r\n                            Any business related inquiries can be made directly to the email <span style={{color: \"red\"}}>\r\n                    <a target=\"_blank\" href=\"mailTo:Therealendergate@gmail.com\">here.</a></span>\r\n                            <br/>\r\n                            <br/>\r\n                            I also reply relatively quickly on <a target=\"_blank\" href=\"https://www.linkedin.com/in/julian-estes-411b711a8/\"> Linkedin.</a>\r\n                            <br/>\r\n                            <br/>\r\n                            Dont forget to also follow my projects on <a target=\"_blank\" href=\"https://github.com/Arcalise08\">Github!</a> Im uploading new stuff every day!\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n                <small className='d-block text-center mt-3'>Made with <span style={{color: \"#3293a8\"}}>React</span> by <span style={{color:\"red\"}}>Julian Estes</span></small>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Home;","import React from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nclass ProjectCard extends React.Component {\r\n\r\n    render() {\r\n        const { project } = this.props\r\n        return (\r\n\r\n            <Card className=\" mx-auto my-2 col-md-6\">\r\n                <Card.Title >\r\n                    <h3 className=\"mt-3\">{project.name}</h3>\r\n                </Card.Title>\r\n                <Card.Body className=\"pt-0\">\r\n                    {project.description ? project.description :\"Description not available\"}\r\n                    <br/>\r\n                    {project.archived ? <span style={{color: \"red\"}}>--This project has been shelved for now!--</span> : <span style={{color: \"green\"}}>--This project is still active!--</span>}\r\n                    <br/>\r\n                    <a href={\"https://github.com/Arcalise08/\" + project.name } target=\"_blank\">Github Link</a>\r\n                    <br/>\r\n                    {project.has_pages ? <a href={'https://arcalise08.github.io/' + project.name } target=\"_blank\">Website Link</a>\r\n                        : project.homepage ?\r\n                            <a href={project.homepage } target=\"_blank\">Website Link</a>\r\n                            : null}\r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProjectCard;","import React from \"react\";\r\nimport MediaQuery from \"react-responsive/src/Component\";\r\nimport ParticlesBg from \"./particles-bg\";\r\nimport axios from 'axios';\r\nimport ProjectCard from \"./ProjectCard\";\r\n\r\nclass Projects extends React.Component {\r\nconstructor() {\r\n    super();\r\n    this.state = {\r\n        projects: []\r\n    }\r\n}\r\n    async getProjects() {\r\n        await axios.get(\"https://api.github.com/users/Arcalise08/repos\")\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                this.setState({\r\n                    projects: response.data\r\n                })\r\n            })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getProjects();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n                <div className=\"App\">\r\n                    <MediaQuery maxWidth={576}>\r\n                        <ParticlesBg num=\"20\" color=\"#b51204\" type=\"cobweb\" bg={true}/>\r\n                    </MediaQuery>\r\n                    <MediaQuery minWidth={576}>\r\n                        <ParticlesBg color=\"#b51204\" type=\"cobweb\" bg={true}/>\r\n                    </MediaQuery>\r\n                    <h1 className=\"display-2 text-center mt-3 mb-3\">My Projects</h1>\r\n                    {this.state.projects.length > 0 ? this.state.projects.map(project => <ProjectCard key={project.id} project={project}/>): null}\r\n                    <MediaQuery maxWidth={576}>\r\n                        <ParticlesBg num=\"20\" color=\"#b51204\" type=\"cobweb\" bg={true}/>\r\n                    </MediaQuery>\r\n\r\n                    <small className='d-block text-center mt-3'>Made with <span style={{color: \"#3293a8\"}}>React</span> by <span style={{color:\"red\"}}>Julian Estes</span></small>\r\n\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects;","import React from 'react';\nimport Unity, { UnityContent } from \"react-unity-webgl\";\nimport NavMenu from './components/NavBar';\nimport {\n    HashRouter as Router,\n    Redirect,\n    Route\n} from \"react-router-dom\";\n\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n//my components\nimport Home from \"./components/Home\";\nimport Projects from \"./components/Projects\";\n\nconst unityContent = new UnityContent(\n    \"MyGame/Build.json\",\n    \"MyGame/UnityLoader.js\"\n);\n\nfunction App() {\n\n  return (\n      <Router hashType=\"slash\">\n          <NavMenu/>\n          <Route exact path=\"/\" render={() => <Home/>}/>\n          <Route path=\"/projects\" render={() => <Projects/>}/>\n      </Router>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}